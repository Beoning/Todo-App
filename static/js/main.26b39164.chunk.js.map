{"version":3,"sources":["reportWebVitals.js","Custom-hooks/useInputValue.jsx","Custom-hooks/useTodos.jsx","Components/Layout.jsx","Components/AddTodo.jsx","Components/TodoListItem.jsx","Components/TodoList.jsx","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","useInputValue","initialValue","useState","inputValue","setInputValue","changeInput","event","target","value","clearInput","keyInput","callback","which","keyCode","useTodos","todos","setTodos","addTodo","text","concat","checked","checkTodo","idx","map","todo","index","removeTodo","filter","Layout","memo","props","Paper","elevation","style","padding","margin","backgroundColor","AppBar","color","position","height","Toolbar","Typography","children","AddTodo","Grid","container","xs","md","item","paddingRight","TextField","placeholder","onChange","onInputChange","onKeyPress","onInputKeyPress","fullWidth","Button","variant","onClick","onButtonClick","TodoListItem","ListItem","divider","Checkbox","onCheckBoxToggle","disableRipple","ListItemText","primary","ListItemSecondaryAction","IconButton","aria-label","DeleteOutlined","TodoList","items","length","List","overflow","key","onItemRemove","onItemCheck","TodoApp","clearInputAndAddTodo","_","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.26b39164.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useState } from \"react\";\r\nconst useInputValue = (initialValue = \"\") => {\r\n  const [inputValue, setInputValue] = useState(initialValue);\r\n  return {\r\n    inputValue,\r\n    changeInput: (event) => setInputValue(event.target.value),\r\n    clearInput: () => setInputValue(\"\"),\r\n    keyInput: (event, callback) => {\r\n      if (event.which === 13 || event.keyCode === 13) {\r\n        callback(inputValue);\r\n        return true;\r\n      }\r\n      return false;\r\n    },\r\n  };\r\n};\r\n\r\nexport default useInputValue;\r\n","import { useState } from \"react\";\r\nconst useTodos = (initialValue = []) => {\r\n  const [todos, setTodos] = useState(initialValue);\r\n  return {\r\n    todos,\r\n    addTodo: (text) => {\r\n      if (text !== \"\") {\r\n        setTodos(\r\n          todos.concat({\r\n            text,\r\n            checked: false,\r\n          })\r\n        );\r\n      }\r\n    },\r\n    checkTodo: (idx) => {\r\n      setTodos(\r\n        todos.map((todo, index) => {\r\n          if (idx === index) {\r\n            todo.checked = !todo.checked;\r\n          }\r\n          return todo;\r\n        })\r\n      );\r\n    },\r\n    removeTodo: (idx) => {\r\n      setTodos(todos.filter((todo, index) => idx !== index));\r\n    },\r\n  };\r\n};\r\n\r\nexport default useTodos;\r\n","import React, { memo } from \"react\";\r\nimport { AppBar, Toolbar, Typography, Paper } from \"@material-ui/core\";\r\nconst Layout = memo((props) => (\r\n  <Paper\r\n    elevation={0}\r\n    style={{ padding: 0, margin: 0, backgroundColor: \"#fafafa\" }}\r\n  >\r\n    <AppBar color=\"primary\" position=\"static\" style={{ height: 64 }}>\r\n      <Toolbar style={{ height: 64 }}>\r\n        <Typography color=\"inherit\">TODO APP</Typography>\r\n      </Toolbar>\r\n    </AppBar>\r\n    {props.children}\r\n  </Paper>\r\n));\r\nexport default Layout;\r\n","import React, { memo } from \"react\";\r\nimport { TextField, Paper, Button, Grid } from \"@material-ui/core\";\r\nconst AddTodo = memo((props) => (\r\n  <Paper style={{ margin: 16, padding: 16 }}>\r\n    <Grid container>\r\n      <Grid xs={10} md={11} item style={{ paddingRight: 16 }}>\r\n        <TextField\r\n          placeholder=\"Add Todo here\"\r\n          value={props.inputValue}\r\n          onChange={props.onInputChange}\r\n          onKeyPress={props.onInputKeyPress}\r\n          fullWidth\r\n        />\r\n      </Grid>\r\n      <Grid xs={2} md={1} item>\r\n        <Button\r\n          fullWidth\r\n          color=\"secondary\"\r\n          variant=\"outlined\"\r\n          onClick={props.onButtonClick}\r\n        >\r\n          Add\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  </Paper>\r\n));\r\nexport default AddTodo;\r\n","import React, { memo } from \"react\";\r\nimport {\r\n  ListItem,\r\n  Checkbox,\r\n  IconButton,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n} from \"@material-ui/core\";\r\nimport { DeleteOutlined } from \"@material-ui/icons\";\r\nconst TodoListItem = memo((props) => (\r\n  <ListItem divider={props.divider}>\r\n    <Checkbox\r\n      onClick={props.onCheckBoxToggle}\r\n      checked={props.checked}\r\n      disableRipple\r\n    />\r\n    <ListItemText primary={props.text} />\r\n    <ListItemSecondaryAction>\r\n      <IconButton aria-label=\"Delete Todo\" onClick={props.onButtonClick}>\r\n        <DeleteOutlined />\r\n      </IconButton>\r\n    </ListItemSecondaryAction>\r\n  </ListItem>\r\n));\r\nexport default TodoListItem;\r\n","import React, { memo } from \"react\";\r\nimport { List, Paper } from \"@material-ui/core\";\r\nimport TodoListItem from \"./TodoListItem\";\r\nconst TodoList = memo((props) => (\r\n  <>\r\n    {props.items.length > 0 && (\r\n      <Paper style={{ margin: 16 }}>\r\n        <List style={{ overflow: \"scroll\" }}>\r\n          {props.items.map((todo, idx) => (\r\n            <TodoListItem\r\n              {...todo}\r\n              key={`TodoItem.${idx}`}\r\n              divider={idx !== props.items.length - 1}\r\n              onButtonClick={() => props.onItemRemove(idx)}\r\n              onCheckBoxToggle={() => props.onItemCheck(idx)}\r\n            />\r\n          ))}\r\n        </List>\r\n      </Paper>\r\n    )}\r\n  </>\r\n));\r\nexport default TodoList;\r\n","import \"./App.css\";\nimport React, { memo } from \"react\";\nimport useInputValue from \"./Custom-hooks/useInputValue\";\nimport useTodos from \"./Custom-hooks/useTodos\";\nimport Layout from \"./Components/Layout\";\nimport AddTodo from \"./Components/AddTodo\";\nimport TodoList from \"./Components/TodoList\";\nconst TodoApp = memo((props) => {\n  const { inputValue, changeInput, clearInput, keyInput } = useInputValue();\n  const { todos, addTodo, checkTodo, removeTodo } = useTodos();\n  const clearInputAndAddTodo = (_) => {\n    clearInput();\n    addTodo(inputValue);\n  };\n  return (\n    <Layout>\n      <AddTodo\n        inputValue={inputValue}\n        onInputChange={changeInput}\n        onButtonClick={clearInputAndAddTodo}\n        onInputKeyPress={(event) => keyInput(event, clearInputAndAddTodo)}\n      />\n      <TodoList\n        items={todos}\n        onItemCheck={(idx) => checkTodo(idx)}\n        onItemRemove={(idx) => removeTodo(idx)}\n      />\n    </Layout>\n  );\n});\n\nexport default TodoApp;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport TodoApp from \"./App\";\n\nReactDOM.render(<TodoApp />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}